-- Explore all countries our customers come from
SELECT DISTINCT country
FROM gold.dim_customers
ORDER BY country;

-- Explore all categories "the major divisions"
SELECT DISTINCT category, subcategory, product_name
FROM gold.dim_products
ORDER BY 1, 2, 3

-- Find the total sales
SELECT SUM(sales_amount) AS total_sales
FROM gold.fact_sales;

-- Find how many items are sold
SELECT SUM(quantity) AS items_sold
FROM gold.fact_sales;

-- Find the average selling price
SELECT AVG(price) AS avg_price
FROM gold.fact_sales;

-- Find the total number of orders
SELECT COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales;

-- Find the total number of products 
SELECT COUNT(product_name) AS total_products
FROM gold.dim_products;

-- Find the total number of customers
SELECT COUNT(customer_key) AS total_customers
FROM gold.dim_customers; 

-- Find the total number of customers that placed and order
SELECT COUNT(DISTINCT customer_key) AS total_cust_with_orders
FROM gold.fact_sales;

-- Generate a report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Num. Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total Num. Products', COUNT(DISTINCT product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total Num. Customers', COUNT(customer_key) FROM gold.dim_customers

-- =============
--   Magnitude
-- =============

-- Find the total number customers by country
SELECT
	country,
	COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT
	gender,
	COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category
SELECT
	category,
	count(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

-- What is the average costs in each category?
SELECT
	category,
	ROUND(AVG(cost), 2) AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC

-- What is the total revenue generated for each category?
SELECT
	p.category,
	SUM(sales_amount) AS total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products p ON fs.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- Find total revenue is generated by each customer
SELECT
	fs.customer_key,
	c.first_name,
	c.last_name,
	c.first_name + ' ' + c.last_name AS full_name,
	SUM(fs.sales_amount) AS total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_customers c ON fs.customer_key = c.customer_key
GROUP BY fs.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC

-- What is the distribution of sold items across countries?
SELECT
	c.country,
	SUM(quantity) AS quantity_sold
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products p ON fs.product_key = p.product_key
LEFT JOIN gold.dim_customers c ON fs.customer_key = c.customer_key
GROUP BY c.country
ORDER BY quantity_sold DESC

-- Distribution of products sold per country
SELECT
	c.country,
	p.product_name,
	SUM(quantity) AS quantity_sold
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products p ON fs.product_key = p.product_key
LEFT JOIN gold.dim_customers c ON fs.customer_key = c.customer_key
GROUP BY c.country, p.product_name
ORDER BY c.country, quantity_sold DESC

-- =============
--   Ranking
-- =============

 -- Which 5 products generate the highest revenue?
 SELECT TOP 5
	p.product_name,
	SUM(fs.sales_amount) AS total_sales
 FROM gold.fact_sales fs
 LEFT JOIN gold.dim_products p ON fs.product_key = p.product_key
 GROUP BY p.product_name
 ORDER BY total_sales DESC

 -- Window function solution
 SELECT * FROM
 (
 SELECT
	p.product_name,
	SUM(fs.sales_amount) AS total_sales,
	ROW_NUMBER() OVER(ORDER BY SUM(fs.sales_amount) DESC) AS rnk_products
 FROM gold.fact_sales fs
 LEFT JOIN gold.dim_products p ON fs.product_key = p.product_key
 GROUP BY p.product_name)t WHERE rnk_products <= 5

-- What are the 5 worst-performing products in terms of sales?
 SELECT TOP 5
	p.product_name,
	SUM(fs.sales_amount) AS total_sales
 FROM gold.fact_sales fs
 LEFT JOIN gold.dim_products p ON fs.product_key = p.product_key
 GROUP BY p.product_name
 ORDER BY total_sales

 -- Find the top 10 customers who have generated the highest revenue
 SELECT TOP 10
	fs.customer_key,
	c.first_name,
	c.last_name,
	c.first_name + ' ' + c.last_name AS full_name,
	SUM(fs.sales_amount) AS total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_customers c ON fs.customer_key = c.customer_key
GROUP BY fs.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC


 -- Find the 3 customers with the fewest orders placed
 SELECT TOP 3
	c.customer_key,
	c.first_name,
	c.last_name,
	COUNT(DISTINCT order_number) AS total_orders
 FROM gold.fact_sales fs
 LEFT JOIN gold.dim_customers c ON fs.customer_key = c.customer_key
 GROUP BY c.customer_key, c.first_name, c.last_name
 ORDER BY total_orders